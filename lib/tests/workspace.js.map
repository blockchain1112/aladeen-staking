{"version":3,"file":"workspace.js","sourceRoot":"","sources":["../../tests/workspace.ts"],"names":[],"mappings":";;;AAAA,kDAA+C;AAC/C,6CAAwE;AAOxE,SAAgB,aAAa;IAC3B,MAAM,GAAG,GAAG,uBAAuB,CAAC;IACpC,OAAO,IAAI,oBAAU,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;AAC1C,CAAC;AAHD,sCAGC;AAEM,KAAK,UAAU,sBAAsB,CAC1C,UAAsB,EACtB,QAAQ,GAAG,0BAAgB,GAAG,EAAE,EAChC,OAAO,GAAG,iBAAO,CAAC,QAAQ,EAAE;IAE5B,MAAM,OAAO,GAAG,OAAO,CAAC;IACxB,MAAM,SAAS,GAAG,MAAM,UAAU,CAAC,cAAc,CAC/C,OAAO,CAAC,SAAS,EACjB,QAAQ,CACT,CAAC;IACF,MAAM,UAAU,CAAC,kBAAkB,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;IAC5D,OAAO,OAAO,CAAC;AACjB,CAAC;AAZD,wDAYC;AAEM,KAAK,UAAU,WAAW;IAC/B,MAAM,UAAU,GAAG,aAAa,EAAE,CAAC;IACnC,MAAM,OAAO,GAAG,MAAM,sBAAsB,CAAC,UAAU,CAAC,CAAC;IACzD,MAAM,MAAM,GAAG,IAAI,eAAM,CAAC,OAAO,CAAC,CAAC;IACnC,OAAO;QACL,UAAU;QACV,MAAM;KACP,CAAC;AACJ,CAAC;AARD,kCAQC","sourcesContent":["import { Wallet } from \"@project-serum/anchor\";\nimport { Connection, Keypair, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n\nexport type CardinalProvider = {\n  connection: Connection;\n  wallet: Wallet;\n};\n\nexport function getConnection(): Connection {\n  const url = \"http://127.0.0.1:8899\";\n  return new Connection(url, \"confirmed\");\n}\n\nexport async function newAccountWithLamports(\n  connection: Connection,\n  lamports = LAMPORTS_PER_SOL * 10,\n  keypair = Keypair.generate()\n): Promise<Keypair> {\n  const account = keypair;\n  const signature = await connection.requestAirdrop(\n    account.publicKey,\n    lamports\n  );\n  await connection.confirmTransaction(signature, \"confirmed\");\n  return account;\n}\n\nexport async function getProvider(): Promise<CardinalProvider> {\n  const connection = getConnection();\n  const keypair = await newAccountWithLamports(connection);\n  const wallet = new Wallet(keypair);\n  return {\n    connection,\n    wallet,\n  };\n}\n"]}