{"version":3,"file":"stake-booster-close.test.js","sourceRoot":"","sources":["../../../tests/stake-booster/stake-booster-close.test.ts"],"names":[],"mappings":";;AAAA,6CAAiD;AACjD,kDAAgD;AAEhD,6CAAuD;AACvD,iCAA2B;AAE3B,mCAA4C;AAE5C,4DAGsC;AACtC,oEAAwE;AACxE,0DAAsE;AACtE,0EAIkD;AAClD,oCAA0D;AAE1D,4CAA2C;AAE3C,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;IACjC,IAAI,QAA0B,CAAC;IAC/B,IAAI,WAAsB,CAAC;IAC3B,IAAI,aAAwB,CAAC;IAC7B,MAAM,4BAA4B,GAAG,IAAI,UAAE,CAAC,CAAC,CAAC,CAAC;IAC/C,MAAM,aAAa,GAAG,IAAI,UAAE,CAAC,EAAE,CAAC,CAAC;IACjC,MAAM,oBAAoB,GAAG,IAAI,UAAE,CAAC,EAAE,CAAC,CAAC;IAExC,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,QAAQ,GAAG,MAAM,IAAA,uBAAW,GAAE,CAAC;QAC/B,eAAe;QACf,CAAC,EAAE,aAAa,CAAC,GAAG,MAAM,IAAA,kBAAU,EAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,EAAE;YACzE,MAAM,EAAE,GAAG;SACZ,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,aAAa,EAAE,KAAK,IAAI,EAAE;QAC3B,IAAI,WAAwB,CAAC;QAC7B,CAAC,WAAW,EAAE,WAAW,CAAC,GAAG,MAAM,IAAA,qBAAe,EAChD,QAAQ,CAAC,UAAU,EACnB,QAAQ,CAAC,MAAM,EACf,EAAE,CACH,CAAC;QAEF,MAAM,IAAA,0BAAkB,EAAC,QAAQ,CAAC,UAAU,EAAE,WAAW,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC9E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gBAAgB,EAAE,KAAK,IAAI,EAAE;QAC9B,MAAM,WAAW,GAAG,MAAM,IAAA,kCAAoB,EAC5C,IAAI,qBAAW,EAAE,EACjB,QAAQ,CAAC,UAAU,EACnB,QAAQ,CAAC,MAAM,EACf;YACE,WAAW,EAAE,WAAW;YACxB,aAAa,EAAE,4BAA4B;YAC3C,WAAW,EAAE,aAAa;YAC1B,YAAY,EAAE,aAAa;YAC3B,gBAAgB,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI;SACpC,CACF,CAAC;QACF,MAAM,IAAA,0BAAkB,EAAC,QAAQ,CAAC,UAAU,EAAE,WAAW,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;QAE5E,MAAM,cAAc,GAAG,IAAA,wBAAkB,EAAC,WAAW,CAAC,CAAC;QACvD,MAAM,YAAY,GAAG,MAAM,IAAA,0BAAe,EACxC,QAAQ,CAAC,UAAU,EACnB,cAAc,CACf,CAAC;QACF,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CACtD,WAAW,CAAC,QAAQ,EAAE,CACvB,CAAC;QACF,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CACvD,IAAI,UAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CACrB,CAAC;QACF,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CACzD,aAAa,CAAC,QAAQ,EAAE,CACzB,CAAC;QACF,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CAC1D,4BAA4B,CAAC,QAAQ,EAAE,CACxC,CAAC;QACF,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CACxD,aAAa,CAAC,QAAQ,EAAE,CACzB,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gBAAgB,EAAE,KAAK,IAAI,EAAE;QAC9B,MAAM,WAAW,GAAG,MAAM,IAAA,oCAAsB,EAC9C,IAAI,qBAAW,EAAE,EACjB,QAAQ,CAAC,UAAU,EACnB,QAAQ,CAAC,MAAM,EACf;YACE,WAAW,EAAE,WAAW;YACxB,aAAa,EAAE,4BAA4B;YAC3C,WAAW,EAAE,aAAa;YAC1B,YAAY,EAAE,oBAAoB;YAClC,gBAAgB,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI;SACpC,CACF,CAAC;QACF,MAAM,IAAA,0BAAkB,EAAC,QAAQ,CAAC,UAAU,EAAE,WAAW,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;QAE5E,MAAM,cAAc,GAAG,IAAA,wBAAkB,EAAC,WAAW,CAAC,CAAC;QACvD,MAAM,YAAY,GAAG,MAAM,IAAA,0BAAe,EACxC,QAAQ,CAAC,UAAU,EACnB,cAAc,CACf,CAAC;QACF,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CACtD,WAAW,CAAC,QAAQ,EAAE,CACvB,CAAC;QACF,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CACvD,IAAI,UAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CACrB,CAAC;QACF,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CACzD,oBAAoB,CAAC,QAAQ,EAAE,CAChC,CAAC;QACF,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CAC1D,4BAA4B,CAAC,QAAQ,EAAE,CACxC,CAAC;QACF,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CACxD,aAAa,CAAC,QAAQ,EAAE,CACzB,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;QACtD,MAAM,gBAAgB,GAAG,IAAI,gBAAO,CAClC,0BAAc,EACd,8BAAkB,EAClB,QAAQ,CACT,CAAC;QACF,MAAM,cAAc,GAAG,IAAA,wBAAkB,EAAC,WAAW,CAAC,CAAC;QACvD,MAAM,WAAW,GAAG,IAAI,qBAAW,EAAE,CAAC,GAAG,CACvC,gBAAgB,CAAC,WAAW,CAAC,kBAAkB,CAC7C;YACE,aAAa,EAAE,4BAA4B;YAC3C,WAAW,EAAE,aAAa;YAC1B,YAAY,EAAE,oBAAoB;YAClC,cAAc,EAAE,iBAAO,CAAC,QAAQ,EAAE,CAAC,SAAS;YAC5C,gBAAgB,EAAE,IAAI,UAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;SAC5C,EACD;YACE,QAAQ,EAAE;gBACR,SAAS,EAAE,WAAW;gBACtB,YAAY,EAAE,cAAc;gBAC5B,SAAS,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS;aACrC;SACF,CACF,CACF,CAAC;QACF,MAAM,MAAM,CACV,IAAA,0BAAkB,EAAC,QAAQ,CAAC,UAAU,EAAE,WAAW,EAAE,QAAQ,CAAC,MAAM,EAAE;YACpE,MAAM,EAAE,IAAI;SACb,CAAC,CACH,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IACtB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,eAAe,EAAE,KAAK,IAAI,EAAE;QAC7B,MAAM,cAAc,GAAG,IAAA,wBAAkB,EAAC,WAAW,CAAC,CAAC;QACvD,MAAM,WAAW,GAAG,MAAM,IAAA,mCAAqB,EAC7C,IAAI,qBAAW,EAAE,EACjB,QAAQ,CAAC,UAAU,EACnB,QAAQ,CAAC,MAAM,EACf;YACE,WAAW,EAAE,WAAW;SACzB,CACF,CAAC;QACF,MAAM,IAAA,0BAAkB,EAAC,QAAQ,CAAC,UAAU,EAAE,WAAW,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;QAE5E,MAAM,YAAY,GAAG,MAAM,IAAA,sBAAa,EAAC,GAAG,EAAE,CAC5C,IAAA,0BAAe,EAAC,QAAQ,CAAC,UAAU,EAAE,cAAc,CAAC,CACrD,CAAC;QACF,MAAM,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { tryGetAccount } from \"@cardinal/common\";\nimport { Program } from \"@project-serum/anchor\";\nimport type { PublicKey } from \"@solana/web3.js\";\nimport { Keypair, Transaction } from \"@solana/web3.js\";\nimport { BN } from \"bn.js\";\n\nimport { createStakePool } from \"../../src\";\nimport type { STAKE_POOL_PROGRAM } from \"../../src/programs/stakePool\";\nimport {\n  STAKE_POOL_ADDRESS,\n  STAKE_POOL_IDL,\n} from \"../../src/programs/stakePool\";\nimport { getStakeBooster } from \"../../src/programs/stakePool/accounts\";\nimport { findStakeBoosterId } from \"../../src/programs/stakePool/pda\";\nimport {\n  withCloseStakeBooster,\n  withInitStakeBooster,\n  withUpdateStakeBooster,\n} from \"../../src/programs/stakePool/transaction\";\nimport { createMint, executeTransaction } from \"../utils\";\nimport type { CardinalProvider } from \"../workspace\";\nimport { getProvider } from \"../workspace\";\n\ndescribe(\"Create stake pool\", () => {\n  let provider: CardinalProvider;\n  let stakePoolId: PublicKey;\n  let paymentMintId: PublicKey;\n  const STAKE_BOOSTER_PAYMENT_AMOUNT = new BN(2);\n  const BOOST_SECONDS = new BN(10);\n  const UPDATE_BOOST_SECONDS = new BN(20);\n\n  beforeAll(async () => {\n    provider = await getProvider();\n    // payment mint\n    [, paymentMintId] = await createMint(provider.connection, provider.wallet, {\n      amount: 100,\n    });\n  });\n\n  it(\"Create Pool\", async () => {\n    let transaction: Transaction;\n    [transaction, stakePoolId] = await createStakePool(\n      provider.connection,\n      provider.wallet,\n      {}\n    );\n\n    await executeTransaction(provider.connection, transaction, provider.wallet);\n  });\n\n  it(\"Create booster\", async () => {\n    const transaction = await withInitStakeBooster(\n      new Transaction(),\n      provider.connection,\n      provider.wallet,\n      {\n        stakePoolId: stakePoolId,\n        paymentAmount: STAKE_BOOSTER_PAYMENT_AMOUNT,\n        paymentMint: paymentMintId,\n        boostSeconds: BOOST_SECONDS,\n        startTimeSeconds: Date.now() / 1000,\n      }\n    );\n    await executeTransaction(provider.connection, transaction, provider.wallet);\n\n    const stakeBoosterId = findStakeBoosterId(stakePoolId);\n    const stakeBooster = await getStakeBooster(\n      provider.connection,\n      stakeBoosterId\n    );\n    expect(stakeBooster.parsed.stakePool.toString()).toEqual(\n      stakePoolId.toString()\n    );\n    expect(stakeBooster.parsed.identifier.toString()).toEqual(\n      new BN(0).toString()\n    );\n    expect(stakeBooster.parsed.boostSeconds.toString()).toEqual(\n      BOOST_SECONDS.toString()\n    );\n    expect(stakeBooster.parsed.paymentAmount.toString()).toEqual(\n      STAKE_BOOSTER_PAYMENT_AMOUNT.toString()\n    );\n    expect(stakeBooster.parsed.paymentMint.toString()).toEqual(\n      paymentMintId.toString()\n    );\n  });\n\n  it(\"Update booster\", async () => {\n    const transaction = await withUpdateStakeBooster(\n      new Transaction(),\n      provider.connection,\n      provider.wallet,\n      {\n        stakePoolId: stakePoolId,\n        paymentAmount: STAKE_BOOSTER_PAYMENT_AMOUNT,\n        paymentMint: paymentMintId,\n        boostSeconds: UPDATE_BOOST_SECONDS,\n        startTimeSeconds: Date.now() / 1000,\n      }\n    );\n    await executeTransaction(provider.connection, transaction, provider.wallet);\n\n    const stakeBoosterId = findStakeBoosterId(stakePoolId);\n    const stakeBooster = await getStakeBooster(\n      provider.connection,\n      stakeBoosterId\n    );\n    expect(stakeBooster.parsed.stakePool.toString()).toEqual(\n      stakePoolId.toString()\n    );\n    expect(stakeBooster.parsed.identifier.toString()).toEqual(\n      new BN(0).toString()\n    );\n    expect(stakeBooster.parsed.boostSeconds.toString()).toEqual(\n      UPDATE_BOOST_SECONDS.toString()\n    );\n    expect(stakeBooster.parsed.paymentAmount.toString()).toEqual(\n      STAKE_BOOSTER_PAYMENT_AMOUNT.toString()\n    );\n    expect(stakeBooster.parsed.paymentMint.toString()).toEqual(\n      paymentMintId.toString()\n    );\n  });\n\n  it(\"Update booster invalid payment manager\", async () => {\n    const stakePoolProgram = new Program<STAKE_POOL_PROGRAM>(\n      STAKE_POOL_IDL,\n      STAKE_POOL_ADDRESS,\n      provider\n    );\n    const stakeBoosterId = findStakeBoosterId(stakePoolId);\n    const transaction = new Transaction().add(\n      stakePoolProgram.instruction.updateStakeBooster(\n        {\n          paymentAmount: STAKE_BOOSTER_PAYMENT_AMOUNT,\n          paymentMint: paymentMintId,\n          boostSeconds: UPDATE_BOOST_SECONDS,\n          paymentManager: Keypair.generate().publicKey,\n          startTimeSeconds: new BN(Date.now() / 1000),\n        },\n        {\n          accounts: {\n            stakePool: stakePoolId,\n            stakeBooster: stakeBoosterId,\n            authority: provider.wallet.publicKey,\n          },\n        }\n      )\n    );\n    await expect(\n      executeTransaction(provider.connection, transaction, provider.wallet, {\n        silent: true,\n      })\n    ).rejects.toThrow();\n  });\n\n  it(\"Close booster\", async () => {\n    const stakeBoosterId = findStakeBoosterId(stakePoolId);\n    const transaction = await withCloseStakeBooster(\n      new Transaction(),\n      provider.connection,\n      provider.wallet,\n      {\n        stakePoolId: stakePoolId,\n      }\n    );\n    await executeTransaction(provider.connection, transaction, provider.wallet);\n\n    const stakeBooster = await tryGetAccount(() =>\n      getStakeBooster(provider.connection, stakeBoosterId)\n    );\n    expect(stakeBooster).toEqual(null);\n  });\n});\n"]}