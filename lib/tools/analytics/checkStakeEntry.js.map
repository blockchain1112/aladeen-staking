{"version":3,"file":"checkStakeEntry.js","sourceRoot":"","sources":["../../../tools/analytics/checkStakeEntry.ts"],"names":[],"mappings":";;;AAAA,6CAAqD;AACrD,0DAAuB;AAEvB,4EAA+E;AAC/E,kEAGkD;AAClD,oEAAsE;AACtE,8DAA8E;AAC9E,8CAA8C;AAE9C,MAAM,eAAe,GAAG,KAAK,EAC3B,OAAe,EACf,aAAiB,EACjB,WAAsB,EACtB,MAAiB,EACjB,EAAE;IACF,MAAM,UAAU,GAAG,IAAA,0BAAa,EAAC,OAAO,CAAC,CAAC;IAC1C,MAAM,YAAY,GAAG,MAAM,IAAA,gCAAwB,EACjD,UAAU,EACV,iBAAO,CAAC,QAAQ,EAAE,CAAC,SAAS,EAC5B,WAAW,EACX,MAAM,EACN,KAAK,CACN,CAAC;IAEF,MAAM,UAAU,GAAG,MAAM,IAAA,wBAAa,EAAC,UAAU,EAAE,YAAY,CAAC,CAAC;IACjE,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACxB,MAAM,mBAAmB,GAAG,IAAA,6BAAuB,EACjD,WAAW,EACX,aAAa,CACd,CAAC;IAEF,MAAM,aAAa,GAAG,IAAA,uBAAiB,EAAC,mBAAmB,EAAE,YAAY,CAAC,CAAC;IAE3E,MAAM,WAAW,GAAG,MAAM,IAAA,yBAAc,EAAC,UAAU,EAAE,aAAa,CAAC,CAAC;IACpE,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AAC3B,CAAC,CAAC;AAEF,eAAe,CACb,SAAS,EACT,IAAI,eAAE,CAAC,CAAC,CAAC,EACT,IAAI,mBAAS,CAAC,8CAA8C,CAAC,EAC7D,IAAI,mBAAS,CAAC,8CAA8C,CAAC,CAC9D,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC","sourcesContent":["import { Keypair, PublicKey } from \"@solana/web3.js\";\nimport BN from \"bn.js\";\n\nimport { getRewardEntry } from \"../../src/programs/rewardDistributor/accounts\";\nimport {\n  findRewardDistributorId,\n  findRewardEntryId,\n} from \"../../src/programs/rewardDistributor/pda\";\nimport { getStakeEntry } from \"../../src/programs/stakePool/accounts\";\nimport { findStakeEntryIdFromMint } from \"../../src/programs/stakePool/utils\";\nimport { connectionFor } from \"../connection\";\n\nconst checkStakeEntry = async (\n  cluster: string,\n  distributorId: BN,\n  stakePoolId: PublicKey,\n  mintId: PublicKey\n) => {\n  const connection = connectionFor(cluster);\n  const stakeEntryId = await findStakeEntryIdFromMint(\n    connection,\n    Keypair.generate().publicKey,\n    stakePoolId,\n    mintId,\n    false\n  );\n\n  const stakeEntry = await getStakeEntry(connection, stakeEntryId);\n  console.log(stakeEntry);\n  const rewardDistributorId = findRewardDistributorId(\n    stakePoolId,\n    distributorId\n  );\n\n  const rewardEntryId = findRewardEntryId(rewardDistributorId, stakeEntryId);\n\n  const rewardEntry = await getRewardEntry(connection, rewardEntryId);\n  console.log(rewardEntry);\n};\n\ncheckStakeEntry(\n  \"mainnet\",\n  new BN(0),\n  new PublicKey(\"3BZCupFU6X3wYJwgTsKS2vTs4VeMrhSZgx4P2TfzExtP\"),\n  new PublicKey(\"2eRCM7sSKuYKiSpEssZTxzKTfPiMbs4JFBwbeeDS3w71\")\n).catch((e) => console.log(e));\n"]}